// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model Category {
  id          String     @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name        String
  description String?
  createdAt   DateTime   @default(now())
  Calendar    Calendar[]
}

model Calendar {
  id             String             @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name           String
  description    String?
  url            String
  createdAt      DateTime           @default(now())
  categoryId     String             @db.ObjectId
  category       Category           @relation(fields: [categoryId], references: [id])
  starredByUsers StarsOnCalendars[]

}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String             @id @default(cuid()) @map("_id")
  name             String?
  email            String?            @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  starredCalendars StarsOnCalendars[]
}

model VerificationToken {
  identifier String   @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model StarsOnCalendars {
  id         String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  calendar   Calendar @relation(fields: [calendarId], references: [id])
  calendarId String // relation scalar field (used in the `@relation` attribute above)
  user       User     @relation(fields: [userId], references: [id])
  userId     String // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@unique([calendarId, userId])
}
